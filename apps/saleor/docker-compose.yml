# image,docs: https://docs.saleor.io/setup/docker-compose

services:
  init:
    image: $W9_REPO:$W9_VERSION
    container_name: $W9_ID-init
    restart: "no"
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_healthy
    volumes:
      - saleor-media:/app/media
    env_file: .env
    command: >
      sh -c "
        if [ ! -f /app/media/init-completed ]; then
          python3 manage.py migrate &&
          python3 manage.py populatedb --createsuperuser &&
          touch /app/media/init-completed &&
          exit 0
        else
          echo 'init already completed' &&
          exit 0
        fi"

  api:
    image: $W9_REPO:$W9_VERSION
    container_name: $W9_ID-api
    ports:
      - $W9_API_PORT_SET:8000
    restart: unless-stopped
    stdin_open: true
    tty: true
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
      jaeger:
        condition: service_started
      init:
        condition: service_completed_successfully
    volumes:
      # shared volume between worker and api for media
      - saleor-media:/app/media
    env_file: .env
    environment:
      - DASHBOARD_URL=$SALEOR_DASHBOARD_URL
      - ALLOWED_HOSTS=$SALEOR_ALLOWED_HOSTS

  dashboard:
    image: ghcr.io/saleor/saleor-dashboard:3.21
    container_name: $W9_ID
    ports:
      - $W9_HTTP_PORT_SET:80
    restart: unless-stopped
    env_file: .env
    depends_on:
      init:
        condition: service_completed_successfully
    environment:
      - API_URL=$SALEOR_API_URL

  db:
    image: library/postgres:15-alpine
    container_name: $W9_ID-postgres
    restart: unless-stopped
    volumes:
      - saleor-db:/var/lib/postgresql/data
      - ./src/replica_user.sql:/docker-entrypoint-initdb.d/replica_user.sql:ro,z
    environment:
      - POSTGRES_USER=$SALEOR_POSTGRES_USER
      - POSTGRES_PASSWORD=$SALEOR_POSTGRES_PASSWORD

  redis:
    image: library/redis:7.0-alpine
    container_name: $W9_ID-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - saleor-redis:/data

  worker:
    image: $W9_REPO:$W9_VERSION
    container_name: $W9_ID-worker
    command: celery -A saleor --app=saleor.celeryconf:app worker --loglevel=info -B
    restart: unless-stopped
    env_file: .env
    depends_on:
      redis:
        condition: service_started
      mailpit:
        condition: service_started
      init:
        condition: service_completed_successfully
    volumes:
      # shared volume between worker and api for media
      - saleor-media:/app/media

  jaeger:
    image: jaegertracing/jaeger:2.7.0
    container_name: $W9_ID-jaeger
    #ports:
      #- "16686:16686"
      #- "4317:4317"
      #- "4318:4318"
    restart: unless-stopped
    depends_on:
      init:
        condition: service_completed_successfully
    volumes:
      - type: tmpfs
        target: /tmp

  mailpit:
    image: axllent/mailpit:v1.27
    container_name: $W9_ID-mailpit
    #ports:
      #- 1025:1025 # smtp server
      #- 8025:8025 # web ui. Visit http://localhost:8025/ to check emails
    restart: unless-stopped
    depends_on:
      init:
        condition: service_completed_successfully

volumes:
  saleor-db:
  saleor-redis:
  saleor-media:

networks:
  default:
    name: $W9_NETWORK
    external: true