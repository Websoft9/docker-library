W9_REPO=calcom/cal.com
W9_DIST='community'
W9_VERSION='v5.0.19'
W9_POWER_PASSWORD='!9SmQd4X!A80D!yk'
W9_HTTP_PORT_SET='9001'
W9_ID='calcom'
W9_HTTP_PORT=3000

W9_DB_EXPOSE="postgresql"
W9_URL='internet_ip:$W9_HTTP_PORT_SET'
W9_URL_REPLACE=true
W9_NETWORK=websoft9

#### ----------------------------------------------------------------------------------------- ####


# Below environment is created by apphub: https://github.com/calcom/docker/blob/main/.env.example

NEXT_PUBLIC_WEBAPP_URL=http://${W9_URL}
NEXT_PUBLIC_API_V2_URL=http://${W9_URL}:5555/api/v2

# It is highly recommended that the NEXTAUTH_SECRET must be overridden and very unique
# Use `openssl rand -base64 32` to generate a key
NEXTAUTH_SECRET=zwCgqlMV2sOn6tWCMQi7FeCbYe9my/zldJCJUPTpSAc=

# Encryption key that will be used to encrypt CalDAV credentials, choose a random string, for example with `dd if=/dev/urandom bs=1K count=1 | md5sum`
CALENDSO_ENCRYPTION_KEY=dd3aa299f0b1ebaa6e559f9bc6813dfa

POSTGRES_USER=postgres
POSTGRES_PASSWORD=${W9_POWER_PASSWORD}
POSTGRES_DB=calcom
DATABASE_HOST=${W9_ID}-postgresql:5432
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}/${POSTGRES_DB}
# Needed to run migrations while using a connection pooler like PgBouncer
# Use the same one as DATABASE_URL if you're not using a connection pooler
DATABASE_DIRECT_URL=${DATABASE_URL}

NODE_ENV=production
