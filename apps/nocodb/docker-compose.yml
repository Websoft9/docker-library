# compose: https://github.com/nocodb/nocodb/blob/master/docker-compose/pg/docker-compose.yml
# docs: https://docs.nocodb.com/getting-started/installation

version: '3.8'

services:
  nocodb:
    depends_on:
      db:
        condition: service_healthy
    image: nocodb/nocodb:${APP_VERSION}
    container_name: ${APP_NAME}
    ports:
      - "${APP_HTTP_PORT}:8080"
    restart: unless-stopped
    volumes: 
      - "nocodb:/usr/app/data"
    environment:
      NC_DB: "pg://${APP_NAME}-postgre:5432?u=${APP_DB_POSTGRESQL_USER}&p=${APP_DB_POSTGRESQL_PASSWORD}&d=${APP_DB_POSTGRESQL_NAME}"

  db:
    image: postgres:${APP_DB_POSTGRESQL_VERSION}
    container_name: ${APP_NAME}-postgre
    hostname: ${APP_NAME}-postgre
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${APP_DB_POSTGRESQL_PASSWORD}
      POSTGRES_USER: ${APP_DB_POSTGRESQL_USER}
      POSTGRES_DB: ${APP_DB_POSTGRESQL_NAME}
    healthcheck:
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
      interval: 10s
      timeout: 2s
      retries: 10
    
networks:
  default:
    name: ${APP_NETWORK}
    external: true
    
volumes:
  postgres:
    driver: local
  nocodb:
    driver: local