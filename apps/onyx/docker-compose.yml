# image: https://hub.docker.com/u/onyxdotapp
# compose file: https://github.com/onyx-dot-app/onyx/blob/main/deployment/docker_compose/docker-compose.prod.yml

version: '3.8'

services:
  api_server:
    image: onyxdotapp/onyx-backend:${W9_VERSION:-latest}
    container_name: $W9_ID-api-server
    command: >
      /bin/sh -c "alembic upgrade head && echo \"Starting Danswer Api Server\" && uvicorn danswer.main:app --host 0.0.0.0 --port 8080"
    depends_on:
      - relational_db
      - index
      - cache
      - inference_model_server
    restart: always
    env_file:
      - .env
    environment:
      - AUTH_TYPE=${AUTH_TYPE:-oidc}
      - POSTGRES_HOST=$W9_ID-postgresql
      - VESPA_HOST=danswer-index-$W9_HTTP_PORT_SET
      - REDIS_HOST=$W9_ID-cache
      - MODEL_SERVER_HOST=$W9_ID-inference-model-server
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  background:
    image: onyxdotapp/onyx-backend:${W9_VERSION:-latest}
    container_name: $W9_ID-background
    command: /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
    depends_on:
      - relational_db
      - index
      - cache
      - inference_model_server
      - indexing_model_server
    restart: always
    env_file:
      - .env
    environment:
      - AUTH_TYPE=${AUTH_TYPE:-oidc}
      - POSTGRES_HOST=$W9_ID-postgresql
      - VESPA_HOST=danswer-index-$W9_HTTP_PORT_SET
      - REDIS_HOST=$W9_ID-cache
      - MODEL_SERVER_HOST=$W9_ID-inference-model-server
      - INDEXING_MODEL_SERVER_HOST=$W9_ID-indexing-model-server
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  web_server:
    image: onyxdotapp/onyx-web-server:${W9_VERSION:-latest}
    container_name: $W9_ID-web-server
    depends_on:
      - api_server
    restart: always
    env_file:
      - .env
    environment:
      - INTERNAL_URL=http://${W9_ID}-api-server:8080
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  relational_db:
    image: postgres:15.2-alpine
    container_name: $W9_ID-postgresql
    command: -c 'max_connections=150'
    restart: always
    env_file:
      - .env
    volumes:
      - db_volume:/var/lib/postgresql/data
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  inference_model_server:
    image: danswer/danswer-model-server:${W9_VERSION:-latest}
    container_name: $W9_ID-inference-model-server
    command: >
      /bin/sh -c "if [ \"${DISABLE_MODEL_SERVER:-false}\" = \"True\" ]; then
        echo 'Skipping service...';
        exit 0;
      else
        exec uvicorn model_server.main:app --host 0.0.0.0 --port 9000;
      fi"
    restart: on-failure
    environment:
      - MIN_THREADS_ML_MODELS=${MIN_THREADS_ML_MODELS:-}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - model_cache_huggingface:/root/.cache/huggingface/
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  indexing_model_server:
    image: onyxdotapp/onyx-model-server:${W9_VERSION:-latest}
    container_name: $W9_ID-indexing-model-server
    command: >
      /bin/sh -c "if [ \"${DISABLE_MODEL_SERVER:-false}\" = \"True\" ]; then
        echo 'Skipping service...';
        exit 0;
      else
        exec uvicorn model_server.main:app --host 0.0.0.0 --port 9000;
      fi"
    restart: on-failure
    environment:
      - MIN_THREADS_ML_MODELS=${MIN_THREADS_ML_MODELS:-}
      - INDEXING_ONLY=True
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - VESPA_SEARCHER_THREADS=${VESPA_SEARCHER_THREADS:-1}
    volumes:
      - indexing_huggingface_model_cache:/root/.cache/huggingface/
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  # This container name cannot have an underscore in it due to Vespa expectations of the URL
  index:
    image: vespaengine/vespa:latest
    container_name: danswer-index-$W9_HTTP_PORT_SET
    restart: always
    volumes:
      - vespa_volume:/opt/vespa/var
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  nginx:
    image: nginx:1.23.4-alpine
    container_name: $W9_ID
    restart: always
    depends_on:
      - api_server
      - web_server
    ports:
      - "${W9_HTTP_PORT_SET}:80"
    volumes:
      - ./src:/etc/nginx/conf.d
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"
    command: >
      /bin/sh -c "chmod +x /etc/nginx/conf.d/run-nginx.sh && dos2unix /etc/nginx/conf.d/run-nginx.sh && /etc/nginx/conf.d/run-nginx.sh app.conf.template"
    env_file:
      - .env

  cache:
    image: redis:7.4-alpine
    container_name: $W9_ID-cache
    restart: always
    command: redis-server --save "" --appendonly no

volumes:
  db_volume:
  vespa_volume:
  model_cache_huggingface:
  indexing_huggingface_model_cache:


networks:
  default:
    name: ${W9_NETWORK}
    external: true
