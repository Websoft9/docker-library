# add, delete item for variables.json
name: Batch manage all variables.json template from template

on: 
# repository_dispatch:
  push:
    branches: [ main ]
    paths: 
      - 'template/variables.json'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      name: Check out code  
       
    - name: update all variables.json
      run: |
        function inner() 
        {
            local keys=$1
            local v_keys=$2
            local file=$3
            if [ $4 ];then
                local pkey=$4
                for key in ${v_keys[*]};do
                    if [ $(jq .$pkey template/variables.json | jq 'has('$key')' ) == "true" ];then
                        local num=$(jq .$pkey.$key template/variables.json | wc -l)
                        # 递归
                        if [ $num != 1 ];then
                            ikeys=$(jq .$pkey.$key template/variables.json | jq "keys[]")
                            v_ikeys=$(jq .$pkey.$key apps/$file/variables.json | jq "keys[]")
                            local pkey="$pkey.$key"
                            inner "${ikeys[*]}" "${v_ikeys[*]}" $file $pkey
                        # 赋值
                        else
                            local value=$(jq .$pkey.$key apps/$file/variables.json)
                            jq ''.$pkey.$key' = '"$value"'' temp_var.json > tmp.json && mv tmp.json temp_var.json
                        fi
                    fi
                done
            else
                for key in ${v_keys[*]};do
                    if [ $(jq 'has('$key')' template/variables.json) == "true" ];then
                        local num=$(jq .$key template/variables.json | wc -l)
                        # 递归
                        if [ $num != 1 ];then
                            ikeys=$(jq .$key template/variables.json | jq "keys[]")
                            v_ikeys=$(jq .$key apps/$file/variables.json | jq "keys[]")
                            local pkey="$key"
                            inner "${ikeys[*]}" "${v_ikeys[*]}" $file $pkey
                        # 赋值
                        else
                            local value=$(jq .$key apps/$file/variables.json)
                            jq ''.$key' = '"$value"'' temp_var.json > tmp.json && mv tmp.json temp_var.json
                        fi
                    fi
                done
            fi

        }
        files=$(ls apps)
        keys=$(jq keys[] template/variables.json)
        cp template/variables.json temp_var.json
        for file in $files;do
            if [ -e "apps/$file/variables.json" ];then
                v_keys=$(jq keys[] apps/$file/variables.json)
                inner "${keys[*]}" "${v_keys[*]}" $file
                cp temp_var.json apps/$file/variables.json
            fi
        done
        
    - name: delete temp_var.json
      run: |
        rm -fr temp_var.json
       
    - name: push variables.json  
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Templating variables.json
